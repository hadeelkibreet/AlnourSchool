import 'package:flutter/material.dart';
import 'package:easy_stepper/easy_stepper.dart';
import 'package:flutter/cupertino.dart';

class NewStudent extends StatefulWidget {
  const NewStudent({Key? key}) : super(key: key);

  @override
  State<NewStudent> createState() => _NewStudentState();
}

class _NewStudentState extends State<NewStudent> {
  int activeStep = 0;
  int activeStep2 = 0;
  int reachedStep = 0;
  int upperBound = 5;
  double progress = 0.2;
  Set<int> reachedSteps = <int>{0, 2, 4, 5};

  void increaseProgress() {
    if (progress < 1) {
      setState(() => progress += 0.2);
    } else {
      setState(() => progress = 0);
    }
  }
  @override
  Widget build(BuildContext context) {
    return


      MaterialApp(
    title: 'Example',
    debugShowCheckedModeBanner: false,
    theme: ThemeData(
    scaffoldBackgroundColor: Colors.white,
    primarySwatch: Colors.purple,
    colorScheme: ColorScheme.fromSwatch(
    primarySwatch: Colors.purple,
    accentColor: Colors.deepOrange,
    backgroundColor: Colors.white,
    ),
    ),
    home: Scaffold(
    body: SafeArea(
    child: SingleChildScrollView(
    child: Column(
    children: [

    Container(
    padding: const EdgeInsets.symmetric(vertical: 40),
    color: Colors.grey.shade200,
    clipBehavior: Clip.none,
    child: EasyStepper(
    activeStep: activeStep,
    lineStyle: const LineStyle(
    lineLength: 70,
    lineSpace: 0,
    lineType: LineType.normal,
    defaultLineColor: Colors.white,
    finishedLineColor: Colors.orange,
    lineThickness: 1.5,
    ),
    activeStepTextColor: Colors.black87,
    finishedStepTextColor: Colors.black87,
    internalPadding: 0,
    showLoadingAnimation: false,
    stepRadius: 8,
    showStepBorder: false,
    steps: [
    EasyStep(
    customStep: CircleAvatar(
    radius: 8,
    backgroundColor: Colors.white,
    child: CircleAvatar(
    radius: 7,
    backgroundColor:
    activeStep >= 0 ? Colors.orange : Colors.white,
    ),
    ),
    title: 'Waiting',
    ),
    EasyStep(
    customStep: CircleAvatar(
    radius: 8,
    backgroundColor: Colors.white,
    child: CircleAvatar(
    radius: 7,
    backgroundColor:
    activeStep >= 1 ? Colors.orange : Colors.white,
    ),
    ),
    title: 'Order Received',
    topTitle: true,
    ),
    EasyStep(
    customStep: CircleAvatar(
    radius: 8,
    backgroundColor: Colors.white,
    child: CircleAvatar(
    radius: 7,
    backgroundColor:
    activeStep >= 2 ? Colors.orange : Colors.white,
    ),
    ),
    title: 'Preparing',
    ),
    EasyStep(
    customStep: CircleAvatar(
    radius: 8,
    backgroundColor: Colors.white,
    child: CircleAvatar(
    radius: 7,
    backgroundColor:
    activeStep >= 3 ? Colors.orange : Colors.white,
    ),
    ),
    title: 'On Way',
    topTitle: true,
    ),

    ],
    onStepReached: (index) =>
    setState(() => activeStep = index),
    ),
    ),


    ],
    ),

    ),
    ),
      floatingActionButton: FloatingActionButton(onPressed: increaseProgress),

    ),
    );
    }

    bool _allowTabStepping(int index, StepEnabling enabling) {
    return enabling == StepEnabling.sequential
    ? index <= reachedStep
        : reachedSteps.contains(index);
    }

    /// Returns the next button.
    Widget _nextStep(StepEnabling enabling) {
    return IconButton(
    onPressed: () {
    if (activeStep2 < upperBound) {
    setState(() {
    if (enabling == StepEnabling.sequential) {
    ++activeStep2;
    if (reachedStep < activeStep2) {
    reachedStep = activeStep2;
    }
    } else {
    activeStep2 =
    reachedSteps.firstWhere((element) => element > activeStep2);
    }
    });
    }
    },
    icon: const Icon(Icons.arrow_forward_ios),
    );
    }

    /// Returns the previous button.
    Widget _previousStep(StepEnabling enabling) {
    return IconButton(
    onPressed: () {
    if (activeStep2 > 0) {
    setState(() => enabling == StepEnabling.sequential
    ? --activeStep2
        : activeStep2 =
    reachedSteps.lastWhere((element) => element < activeStep2));
    }
    },
    icon: const Icon(Icons.arrow_back_ios),
    );
    }
    }

    enum StepEnabling { sequential, individual }


------------------------------------------------------------------------------------------------------شغال بدائي
import 'package:flutter/material.dart';
import 'package:easy_stepper/easy_stepper.dart';
import 'package:flutter/cupertino.dart';

class NewStudent extends StatefulWidget {
    const NewStudent({Key? key}) : super(key: key);

    @override
    State<NewStudent> createState() => _NewStudentState();
}

class _NewStudentState extends State<NewStudent> {
    late PageController _pageController;
    int _currentPageIndex = 0;
    List<String> _stepTitles = ['Waiting', 'Order Received', 'Preparing', 'On Way'];

    void _nextPage() {
        if (_currentPageIndex < _stepTitles.length - 1) {
            _pageController.nextPage(duration: const Duration(milliseconds: 300), curve: Curves.ease);
        }
    }

    void _previousPage() {
        if (_currentPageIndex > 0) {
            _pageController.previousPage(duration: const Duration(milliseconds: 300), curve: Curves.ease);
        }
    }
    @override
    void initState() {
        super.initState();
        _pageController = PageController(initialPage: _currentPageIndex);
    }

    @override
    void dispose() {
        _pageController.dispose();
        super.dispose();
    }
    @override
    Widget build(BuildContext context) {


        return

            MaterialApp(
            title: 'Example',
            debugShowCheckedModeBanner: false,

            home: Scaffold(
            body: PageView(
            controller: _pageController,
            onPageChanged: (index) {
            setState(() {
                _currentPageIndex = index;
                print(index);
            });
        },
        children: [
        Center(child: Text('Waiting')),
        Center(child: Text('Order Received')),
        Center(child: Text('Preparing')),
        Center(child: Text('On Way')),
        ],
        ),
        bottomNavigationBar: BottomAppBar(
        child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
        IconButton(
        onPressed: _previousPage,
        icon: Icon(Icons.arrow_back_ios),
        ),
        IconButton(
        onPressed: _nextPage,
        icon: Icon(Icons.arrow_forward_ios),
        ),
        ],

            ),
        ))
            );
    }
}
---------------------------------------------------

    final TextEditingController emailController= TextEditingController();
    final TextEditingController passwordController= TextEditingController();
    final TextEditingController chakepasswordController= TextEditingController();
    final TextEditingController phoneController= TextEditingController();
    final TextEditingController classController= TextEditingController();
    final TextEditingController adrissController= TextEditingController();



class Step1 extends StatefulWidget {
    final TextEditingController emailController;
    final TextEditingController passwordController;
    final TextEditingController chakepasswordController;
    final TextEditingController phoneController;
    final TextEditingController classController;
    final TextEditingController adrissController;



    const Step1({Key? key,
        required this.emailController,
        required this.passwordController,
        required this.chakepasswordController,
        required this.phoneController,
        required this.classController,
        required this.adrissController})
        : super(key: key);

    @override
    _Step1State createState() => _Step1State();
}

class _Step1State extends State<Step1> {
    bool passwordVisible = false;
    String selectedSemester = '';

    @override
    Widget build(BuildContext context) {
        return Container(
           // width: MediaQuery.of(context).size.width * 0.9,
            child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                    TextField(
                        controller: widget.emailController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'البريد الالكتروني',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    TextField(
                        controller: widget.phoneController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'رقم الهاتف',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    TextField(
                        controller: widget.passwordController,
                        textAlign: TextAlign.right,
                        obscureText: passwordVisible,
                        decoration: InputDecoration(
                            hintText: 'ادخل كلمة المرور',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.password),
                            prefixIcon: GestureDetector(
                                onTap: () {
                                    setState(() {
                                        passwordVisible = !passwordVisible;
                                    });
                                },
                                child: Icon(
                                    passwordVisible ? Icons.visibility : Icons.visibility_off,
                                    color: Colors.grey.withOpacity(0.9),
                                ),
                            ),
                        ),
                    ),
                    TextField(
                        controller: widget.chakepasswordController,
                        textAlign: TextAlign.right,
                        obscureText: !passwordVisible,
                        decoration: InputDecoration(
                            hintText: 'التأكد من كلمة المرور',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.password),
                            prefixIcon: GestureDetector(
                                onTap: () {
                                    setState(() {
                                        passwordVisible = !passwordVisible;
                                    });
                                },
                                child: Icon(
                                    passwordVisible ? Icons.visibility : Icons.visibility_off,
                                    color: Colors.grey.withOpacity(0.9),
                                ),
                            ),
                        ),
                    ),
                    TextField(
                        controller: widget.adrissController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'ادخل عنوانك',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    DropdownButton<String>(
                        value: selectedSemester, // القيمة المحددة حاليًا
                        hint: Text('اختر الفصل الدراسي'), // نص التلميح
                        onChanged: (String? newValue) {
                            setState(() {
                                selectedSemester = newValue!;
                            });
                        },
                        items: <String>[
                            'الأول',
                            'الثاني',
                            'الثالث',
                        ].map<DropdownMenuItem<String>>((String value) {
                            return DropdownMenuItem<String>(
                                value: value,
                                child: Text(value),
                            );
                        }).toList(),
                    ),
                ],
            ),
        );
    }
}
-----------------------------------------------------------لصفحه الاولى شغاله
import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/services.dart';
import '../../constants/constants/backgroundimage.dart';
import '../../constants/constants/circle.dart';
import '../../constants/constants/images.dart';
import 'package:intl/intl.dart';
class NewStudent extends StatefulWidget {
    const NewStudent({Key? key}) : super(key: key);

    @override
    State<NewStudent> createState() => _NewStudentState();
}

class _NewStudentState extends State<NewStudent> {
    late PageController _pageController;
    final TextEditingController nameController = TextEditingController();
    final TextEditingController fathernameController = TextEditingController();
    final TextEditingController mathernameController = TextEditingController();
    final TextEditingController lastnameController = TextEditingController();
    final TextEditingController sexController = TextEditingController();
    final TextEditingController ageController = TextEditingController();

    int _currentPageIndex = 0;

    void _nextPage() {

            _pageController.nextPage(duration: const Duration(milliseconds: 300), curve: Curves.ease);

    }

    void _previousPage() {
        if (_currentPageIndex > 0) {
            _pageController.previousPage(duration: const Duration(milliseconds: 300), curve: Curves.ease);
        }
    }
    @override
    void initState() {
        super.initState();
        _pageController = PageController(initialPage: _currentPageIndex);
    }

    @override
    void dispose() {
        _pageController.dispose();
        super.dispose();
    }


    @override
    Widget build(BuildContext context) {


        return SafeArea(
          child: Scaffold(

              body: Stack(
                children: [
                    BackGroundImage(),
                    Padding(
                        padding: const EdgeInsets.all(10.0),
                        child: Align(
                            alignment: Alignment.topCenter,
                            child: Column(
                                children: [
                                    Row(
                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                        children: [
                                            Column(
                                                children: [
                                                    Image.asset(
                                                        ImageAssets.nour,
                                                        width: 80,
                                                    ),
                                                    Image.asset(
                                                        ImageAssets.book,
                                                        width: 80,
                                                    ),
                                                ],
                                            ),
                                            Image.asset(
                                                ImageAssets.school,
                                                width: 70,
                                            ),
                                        ],
                                    ),
                                    SizedBox(height: 20,),
                                    Row(
                                        mainAxisSize: MainAxisSize.min,
                                        children: [
                                            CircleWithNumber(number: 1,
                                                radius: _currentPageIndex >=0 ?16:20,
                                                color: _currentPageIndex >=0 ?Colors.greenAccent:Colors.black12,
                                                textStyle: TextStyle()),
                                            SizedBox(width: 10,),
                                            CircleWithNumber(number: 2,
                                                radius: _currentPageIndex >=0 ?16:20,
                                                color:_currentPageIndex >=1 ?Colors.greenAccent:Colors.black12,
                                                textStyle: TextStyle()),
                                            SizedBox(width: 10,),

                                            CircleWithNumber(number: 3,
                                                radius: _currentPageIndex >=0 ?16:20,
                                                color: _currentPageIndex >=2 ?Colors.greenAccent:Colors.black12,
                                                textStyle: TextStyle()),

                                        ],
                                    ),

                                ],
                            ),

                        ),
                    ),

                    SingleChildScrollView(
                      child: Container(
                          height: MediaQuery.of(context).size.height,
                        child: PageView(
                        controller: _pageController,
                        onPageChanged: (index) {
                        setState(() {
                            _currentPageIndex = index;
                            print(index);
                        });
          },
          children: [
          Center(child: Step0(
              nameController: nameController,
              fathernameController: fathernameController,
              mathernameController: mathernameController,
              sexController: sexController,
              ageController: ageController,
              lastnameController: lastnameController)),
          Center(child: Step1(
              emailController: emailController,
              passwordController: passwordController,
              chakepasswordController: chakepasswordController,
              phoneController: phoneController,
              classController: classController,
              adrissController: adrissController)),

          Center(child: Step2( emailController:emailController)),
          ],
          ),
                      ),
                    ),
                ],
              ),
              floatingActionButton: Padding(
                padding: const EdgeInsets.only(left: 30),
                child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [

                        FloatingActionButton(
                            onPressed: _previousPage,

                            child: Icon(Icons.arrow_back_ios),
                        ),
                        FloatingActionButton(
                            onPressed:_nextPage,
                            child: Icon(Icons.arrow_forward_ios),
                        ),
                    ],
          ),
              )
              ),
        );





    }

}

class Step0 extends StatelessWidget {
    final TextEditingController nameController;
    final TextEditingController fathernameController;
    final TextEditingController mathernameController;
    final TextEditingController lastnameController;
    final TextEditingController sexController;
    final TextEditingController ageController;

   const Step0({Key? key,
        required this.nameController,
        required this.fathernameController,
        required this.mathernameController,
        required this.sexController,
        required this.ageController,
       required this.lastnameController,
        }) : super(key: key);

    @override
    Widget build(BuildContext context) {
        return Container(
            width: MediaQuery.of(context).size.width*0.9,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextField(
                  controller: nameController,
                  textAlign: TextAlign.right,
                  decoration: InputDecoration(
                      hintText: 'الأسم الأول',
                      hintStyle: TextStyle(color: Colors.grey),
                      filled: true,
                      fillColor: Colors.white,
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(30.0),
                          borderSide: BorderSide.none,
                      ),
                      contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                      suffixIcon: Icon(Icons.face_retouching_natural_outlined, color: Colors.grey.withOpacity(0.9)),

                  ),
              ),
                SizedBox(height: 15,),

                TextField(
                    controller: fathernameController,
                    textAlign: TextAlign.right,
                    decoration: InputDecoration(
                        hintText: 'أسم الأب',
                        hintStyle: TextStyle(color: Colors.grey),
                        filled: true,
                        fillColor: Colors.white,
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30.0),
                            borderSide: BorderSide.none,
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                        suffixIcon: Icon(Icons.face_6_outlined, color: Colors.grey.withOpacity(0.9)),
                    ),
                ),
                SizedBox(height: 15,),

                TextField(
                    controller: mathernameController,
                    textAlign: TextAlign.right,
                    decoration: InputDecoration(
                        hintText: 'أسم الام',
                        hintStyle: TextStyle(color: Colors.grey),
                        filled: true,
                        fillColor: Colors.white,
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30.0),
                            borderSide: BorderSide.none,
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                        suffixIcon: Icon(Icons.face_3_outlined, color: Colors.grey.withOpacity(0.9)),
                    ),
                ),
                SizedBox(height: 15,),

                TextField(
                    controller: lastnameController,
                    textAlign: TextAlign.right,
                    decoration: InputDecoration(
                        hintText: 'أسم العائلة',
                        hintStyle: TextStyle(color: Colors.grey),
                        filled: true,
                        fillColor: Colors.white,
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30.0),
                            borderSide: BorderSide.none,
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                        suffixIcon: Icon(Icons.foundation_outlined, color: Colors.grey.withOpacity(0.9)),
                    ),
                ),
                SizedBox(height: 15,),

                Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                        // إضافة حقل اختيار تاريخ الميلاد
                        BirthDateField(agecontroller: ageController,),
                       // SizedBox(width: 15,),
                        // إضافة حقل اختيار الجنس
                        GenderSelectionField(controller: sexController,),
                    ],
                ),

            ],
          ),
        );
    }
}


// حقل اختيار الجنس
class GenderSelectionField extends StatefulWidget {
    final TextEditingController controller;

    GenderSelectionField({required this.controller});

    @override
    _GenderSelectionFieldState createState() => _GenderSelectionFieldState();
}

class _GenderSelectionFieldState extends State<GenderSelectionField> {
    String selectedGender = '';

    @override
    Widget build(BuildContext context) {
        return Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
                DefaultTextStyle(style: TextStyle(color: Colors.white,fontWeight: FontWeight.w300),
                    child: Text('اختر الجنس')),
                SizedBox(height: 8),
                ToggleButtons(
                    selectedBorderColor:Colors.white,
                    borderColor: Colors.white,
                    isSelected: [
                        selectedGender == 'male',
                        selectedGender == 'female',
                    ],
                    onPressed: (index) {
                        setState(() {
                            selectedGender = index == 0 ? 'male' : 'female';
                            widget.controller.text = selectedGender;
                        });
                    },
                    children: [
                        Icon(Icons.male,color: selectedGender=='male'?Colors.white:Colors.grey,),
                        Icon(Icons.female,color: selectedGender=='female'?Colors.white:Colors.grey),
                    ],
                ),
            ],
        );
    }
}

// حقل اختيار تاريخ الميلاد
class BirthDateField extends StatefulWidget {
    final TextEditingController agecontroller;
    BirthDateField({required this.agecontroller});
    @override
    _BirthDateFieldState createState() => _BirthDateFieldState();
}

class _BirthDateFieldState extends State<BirthDateField> {
    late DateTime selectedDate;

    @override
    void initState() {
        super.initState();
        selectedDate = DateTime.now();
    }

    Future<void> _selectDate(BuildContext context) async {
        final DateTime? picked = await showDatePicker(
            context: context,
            initialDate: selectedDate,
            firstDate: DateTime(1900),
            lastDate: DateTime.now(),
        );
        if (picked != null && picked != selectedDate) {
            setState(() {
                selectedDate = picked;
                widget.agecontroller.text = DateFormat('yyyy-MM-dd').format(selectedDate);


            });
        }
    }

    @override
    Widget build(BuildContext context) {
        return Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [

                SizedBox(height: 8),
                Column(
                    children: [


                        DefaultTextStyle(style: TextStyle(color: Colors.white,fontWeight: FontWeight.w300),
                            child: Text('اختر العمر')),
                        IconButton(
                            onPressed: ()
                            {
                                _selectDate(context);

                            }
                            ,
                            icon: Icon(Icons.calendar_today,color: Colors.white,),
                            tooltip: 'اختر تاريخ الميلاد',
                        ),
                        DefaultTextStyle(style: TextStyle(color: Colors.white,fontWeight: FontWeight.w300),
                            child: Text('${selectedDate.day}/${selectedDate.month}/${selectedDate.year}')),
                    ],
                ),
            ],
        );
    }
}






class Step1 extends StatefulWidget {
    final TextEditingController emailController;
    final TextEditingController passwordController;
    final TextEditingController chakepasswordController;
    final TextEditingController phoneController;
    final TextEditingController classController;
    final TextEditingController adrissController;



    const Step1({Key? key,
        required this.emailController,
        required this.passwordController,
        required this.chakepasswordController,
        required this.phoneController,
        required this.classController,
        required this.adrissController})
        : super(key: key);

    @override
    _Step1State createState() => _Step1State();
}

class _Step1State extends State<Step1> {
    bool passwordVisible = false;
    String selectedSemester = '';

    @override
    Widget build(BuildContext context) {
        return Container(
           // width: MediaQuery.of(context).size.width * 0.9,
            child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                    TextField(
                        controller: widget.emailController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'البريد الالكتروني',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    TextField(
                        controller: widget.phoneController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'رقم الهاتف',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    TextField(
                        controller: widget.passwordController,
                        textAlign: TextAlign.right,
                        obscureText: passwordVisible,
                        decoration: InputDecoration(
                            hintText: 'ادخل كلمة المرور',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.password),
                            prefixIcon: GestureDetector(
                                onTap: () {
                                    setState(() {
                                        passwordVisible = !passwordVisible;
                                    });
                                },
                                child: Icon(
                                    passwordVisible ? Icons.visibility : Icons.visibility_off,
                                    color: Colors.grey.withOpacity(0.9),
                                ),
                            ),
                        ),
                    ),
                    TextField(
                        controller: widget.chakepasswordController,
                        textAlign: TextAlign.right,
                        obscureText: !passwordVisible,
                        decoration: InputDecoration(
                            hintText: 'التأكد من كلمة المرور',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.password),
                            prefixIcon: GestureDetector(
                                onTap: () {
                                    setState(() {
                                        passwordVisible = !passwordVisible;
                                    });
                                },
                                child: Icon(
                                    passwordVisible ? Icons.visibility : Icons.visibility_off,
                                    color: Colors.grey.withOpacity(0.9),
                                ),
                            ),
                        ),
                    ),
                    TextField(
                        controller: widget.adrissController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'ادخل عنوانك',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    DropdownButton<String>(
                        value: selectedSemester, // القيمة المحددة حاليًا
                        hint: Text('اختر الفصل الدراسي'), // نص التلميح
                        onChanged: (String? newValue) {
                            setState(() {
                                selectedSemester = newValue!;
                            });
                        },
                        items: <String>[
                            'الأول',
                            'الثاني',
                            'الثالث',
                        ].map<DropdownMenuItem<String>>((String value) {
                            return DropdownMenuItem<String>(
                                value: value,
                                child: Text(value),
                            );
                        }).toList(),
                    ),
                ],
            ),
        );
    }
}


class Step2 extends StatelessWidget {
    final TextEditingController emailController;

    const Step2({Key? key, required this.emailController}) : super(key: key);

    @override
    Widget build(BuildContext context) {
        return TextField(
            controller: emailController,
            textAlign: TextAlign.right,
            decoration: InputDecoration(
                hintText: 'اسم ثالث',
                hintStyle: TextStyle(color: Colors.grey),
                filled: true,
                fillColor: Colors.white,
                border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(30.0),
                    borderSide: BorderSide.none,
                ),
                contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
            ),
        );
    }
}

------------------------------------------------------------اول وثاني شغال
import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/services.dart';
import '../../constants/constants/backgroundimage.dart';
import '../../constants/constants/circle.dart';
import '../../constants/constants/images.dart';
import 'package:intl/intl.dart';
class NewStudent extends StatefulWidget {
    const NewStudent({Key? key}) : super(key: key);

    @override
    State<NewStudent> createState() => _NewStudentState();
}

class _NewStudentState extends State<NewStudent> {
    late PageController _pageController;
    final TextEditingController nameController = TextEditingController();
    final TextEditingController fathernameController = TextEditingController();
    final TextEditingController mathernameController = TextEditingController();
    final TextEditingController lastnameController = TextEditingController();
    final TextEditingController sexController = TextEditingController();
    final TextEditingController ageController = TextEditingController();

    final TextEditingController emailController = TextEditingController();
    final TextEditingController passwordController = TextEditingController();
    final TextEditingController chakepasswordController= TextEditingController();
    final TextEditingController phoneController= TextEditingController();
    final TextEditingController classController= TextEditingController();
    final TextEditingController adrissController= TextEditingController();

    int _currentPageIndex = 1;
    List<String> _stepTitles = ['w', 'S', 'p'];
    void _nextPage() {
        if (_currentPageIndex < _stepTitles.length - 1) {
            _pageController.nextPage(duration: const Duration(milliseconds: 300), curve: Curves.ease);
        }
    }

    void _previousPage() {
        if (_currentPageIndex > 0) {
            _pageController.previousPage(duration: const Duration(milliseconds: 300), curve: Curves.ease);
        }
    }
    @override
    void initState() {
        super.initState();
        _pageController = PageController(initialPage: _currentPageIndex);
    }

    @override
    void dispose() {
        _pageController.dispose();
        super.dispose();
    }


    @override
    Widget build(BuildContext context) {


        return SafeArea(
          child: Scaffold(

              body: Stack(
                children: [
                    BackGroundImage(),
                    Padding(
                        padding: const EdgeInsets.all(10.0),
                        child: Align(
                            alignment: Alignment.topCenter,
                            child: Column(
                                children: [
                                    Row(
                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                        children: [
                                            Column(
                                                children: [
                                                    Image.asset(
                                                        ImageAssets.nour,
                                                        width: 80,
                                                    ),
                                                    Image.asset(
                                                        ImageAssets.book,
                                                        width: 80,
                                                    ),
                                                ],
                                            ),
                                            Image.asset(
                                                ImageAssets.school,
                                                width: 70,
                                            ),
                                        ],
                                    ),
                                    SizedBox(height: 20,),
                                    Row(
                                        mainAxisSize: MainAxisSize.min,
                                        children: [
                                            CircleWithNumber(number: 1,
                                                radius: _currentPageIndex >=0 ?16:20,
                                                color: _currentPageIndex >=0 ?Colors.greenAccent:Colors.black12,
                                                textStyle: TextStyle()),
                                            SizedBox(width: 10,),
                                            CircleWithNumber(number: 2,
                                                radius: _currentPageIndex >=0 ?16:20,
                                                color:_currentPageIndex >=1 ?Colors.greenAccent:Colors.black12,
                                                textStyle: TextStyle()),
                                            SizedBox(width: 10,),

                                            CircleWithNumber(number: 3,
                                                radius: _currentPageIndex >=0 ?16:20,
                                                color: _currentPageIndex >=2 ?Colors.greenAccent:Colors.black12,
                                                textStyle: TextStyle()),

                                        ],
                                    ),

                                ],
                            ),

                        ),
                    ),

                    SingleChildScrollView(
                      child: Container(
                          height: MediaQuery.of(context).size.height,
                        child: PageView(
                        controller: _pageController,
                        onPageChanged: (index) {
                        setState(() {
                            _currentPageIndex = index;
                            print(index);
                        });
          },
          children: [
              Center(child: Step0(
                  nameController: nameController,
                  fathernameController: fathernameController,
                  mathernameController: mathernameController,
                  sexController: sexController,
                  ageController: ageController,
                  lastnameController: lastnameController)),
              Center(child: Step1(
                  emailController: emailController,
                  passwordController: passwordController,
                  chakepasswordController: chakepasswordController,
                  phoneController: phoneController,
                  classController: classController,
                  adrissController: adrissController)
              ),
              Center(child: Text('data')),          ],
          ),
                      ),
                    ),
                ],
              ),
              floatingActionButton: Padding(
                padding: const EdgeInsets.only(left: 30),
                child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [

                        FloatingActionButton(
                            onPressed: _previousPage,

                            child: Icon(Icons.arrow_back_ios),
                        ),
                        FloatingActionButton(
                            onPressed:_nextPage,
                            child: Icon(Icons.arrow_forward_ios),
                        ),
                    ],
          ),
              )
              ),
        );





    }

}

class Step0 extends StatelessWidget {
    final TextEditingController nameController;
    final TextEditingController fathernameController;
    final TextEditingController mathernameController;
    final TextEditingController lastnameController;
    final TextEditingController sexController;
    final TextEditingController ageController;

   const Step0({Key? key,
        required this.nameController,
        required this.fathernameController,
        required this.mathernameController,
        required this.sexController,
        required this.ageController,
       required this.lastnameController,
        }) : super(key: key);

    @override
    Widget build(BuildContext context) {
        return Container(
            width: MediaQuery.of(context).size.width*0.9,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextField(
                  controller: nameController,
                  textAlign: TextAlign.right,
                  decoration: InputDecoration(
                      hintText: 'الأسم الأول',
                      hintStyle: TextStyle(color: Colors.grey),
                      filled: true,
                      fillColor: Colors.white,
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(30.0),
                          borderSide: BorderSide.none,
                      ),
                      contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                      suffixIcon: Icon(Icons.face_retouching_natural_outlined, color: Colors.grey.withOpacity(0.9)),

                  ),
              ),
                SizedBox(height: 15,),

                TextField(
                    controller: fathernameController,
                    textAlign: TextAlign.right,
                    decoration: InputDecoration(
                        hintText: 'أسم الأب',
                        hintStyle: TextStyle(color: Colors.grey),
                        filled: true,
                        fillColor: Colors.white,
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30.0),
                            borderSide: BorderSide.none,
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                        suffixIcon: Icon(Icons.face_6_outlined, color: Colors.grey.withOpacity(0.9)),
                    ),
                ),
                SizedBox(height: 15,),

                TextField(
                    controller: mathernameController,
                    textAlign: TextAlign.right,
                    decoration: InputDecoration(
                        hintText: 'أسم الام',
                        hintStyle: TextStyle(color: Colors.grey),
                        filled: true,
                        fillColor: Colors.white,
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30.0),
                            borderSide: BorderSide.none,
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                        suffixIcon: Icon(Icons.face_3_outlined, color: Colors.grey.withOpacity(0.9)),
                    ),
                ),
                SizedBox(height: 15,),

                TextField(
                    controller: lastnameController,
                    textAlign: TextAlign.right,
                    decoration: InputDecoration(
                        hintText: 'أسم العائلة',
                        hintStyle: TextStyle(color: Colors.grey),
                        filled: true,
                        fillColor: Colors.white,
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30.0),
                            borderSide: BorderSide.none,
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                        suffixIcon: Icon(Icons.foundation_outlined, color: Colors.grey.withOpacity(0.9)),
                    ),
                ),
                SizedBox(height: 15,),

                Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                        // إضافة حقل اختيار تاريخ الميلاد
                        BirthDateField(agecontroller: ageController,),
                       // SizedBox(width: 15,),
                        // إضافة حقل اختيار الجنس
                        GenderSelectionField(controller: sexController,),
                    ],
                ),

            ],
          ),
        );
    }
}


// حقل اختيار الجنس
class GenderSelectionField extends StatefulWidget {
    final TextEditingController controller;

    GenderSelectionField({required this.controller});

    @override
    _GenderSelectionFieldState createState() => _GenderSelectionFieldState();
}

class _GenderSelectionFieldState extends State<GenderSelectionField> {
    String selectedGender = '';

    @override
    Widget build(BuildContext context) {
        return Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
                DefaultTextStyle(style: TextStyle(color: Colors.white,fontWeight: FontWeight.w300),
                    child: Text('اختر الجنس')),
                SizedBox(height: 8),
                ToggleButtons(
                    selectedBorderColor:Colors.white,
                    borderColor: Colors.white,
                    isSelected: [
                        selectedGender == 'male',
                        selectedGender == 'female',
                    ],
                    onPressed: (index) {
                        setState(() {
                            selectedGender = index == 0 ? 'male' : 'female';
                            widget.controller.text = selectedGender;
                        });
                    },
                    children: [
                        Icon(Icons.male,color: selectedGender=='male'?Colors.white:Colors.grey,),
                        Icon(Icons.female,color: selectedGender=='female'?Colors.white:Colors.grey),
                    ],
                ),
            ],
        );
    }
}

// حقل اختيار تاريخ الميلاد
class BirthDateField extends StatefulWidget {
    final TextEditingController agecontroller;
    BirthDateField({required this.agecontroller});
    @override
    _BirthDateFieldState createState() => _BirthDateFieldState();
}

class _BirthDateFieldState extends State<BirthDateField> {
    late DateTime selectedDate;

    @override
    void initState() {
        super.initState();
        selectedDate = DateTime.now();
    }

    Future<void> _selectDate(BuildContext context) async {
        final DateTime? picked = await showDatePicker(
            context: context,
            initialDate: selectedDate,
            firstDate: DateTime(1900),
            lastDate: DateTime.now(),
        );
        if (picked != null && picked != selectedDate) {
            setState(() {
                selectedDate = picked;
                widget.agecontroller.text = DateFormat('yyyy-MM-dd').format(selectedDate);


            });
        }
    }

    @override
    Widget build(BuildContext context) {
        return Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [

                SizedBox(height: 8),
                Column(
                    children: [


                        DefaultTextStyle(style: TextStyle(color: Colors.white,fontWeight: FontWeight.w300),
                            child: Text('اختر العمر')),
                        IconButton(
                            onPressed: ()
                            {
                                _selectDate(context);

                            }
                            ,
                            icon: Icon(Icons.calendar_today,color: Colors.white,),
                            tooltip: 'اختر تاريخ الميلاد',
                        ),
                        DefaultTextStyle(style: TextStyle(color: Colors.white,fontWeight: FontWeight.w300),
                            child: Text('${selectedDate.day}/${selectedDate.month}/${selectedDate.year}')),
                    ],
                ),
            ],
        );
    }
}






class Step1 extends StatefulWidget {
    final TextEditingController emailController;
    final TextEditingController passwordController;
    final TextEditingController chakepasswordController;
    final TextEditingController phoneController;
    final TextEditingController classController;
    final TextEditingController adrissController;



    const Step1({Key? key,
        required this.emailController,
        required this.passwordController,
        required this.chakepasswordController,
        required this.phoneController,
        required this.classController, required this.adrissController})
        : super(key: key);

    @override
    _Step1State createState() => _Step1State();
}

class _Step1State extends State<Step1> {
    bool passwordVisible = false;
    String selectedSemester = 'الأول';
    @override
    Widget build(BuildContext context) {
        return Container(
            width: MediaQuery.of(context).size.width * 0.9,
            child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                    TextField(
                        controller: widget.emailController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'البريد الالكتروني',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    SizedBox(height: 15,),
                    TextField(
                        controller: widget.phoneController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'رقم الهاتف',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.phone, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    SizedBox(height: 15,),

                    TextField(
                        controller: widget.passwordController,
                        textAlign: TextAlign.right,
                        obscureText: passwordVisible,
                        decoration: InputDecoration(
                            hintText: 'ادخل كلمة المرور',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.password),
                            prefixIcon: GestureDetector(
                                onTap: () {
                                    setState(() {
                                        passwordVisible = !passwordVisible;
                                    });
                                },
                                child: Icon(
                                    passwordVisible ? Icons.visibility : Icons.visibility_off,
                                    color: Colors.grey.withOpacity(0.9),
                                ),
                            ),
                        ),
                    ),
                    SizedBox(height: 15,),

                    TextField(
                        controller: widget.chakepasswordController,
                        textAlign: TextAlign.right,
                        obscureText: !passwordVisible,
                        decoration: InputDecoration(
                            hintText: 'التأكد من كلمة المرور',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.password),
                            prefixIcon: GestureDetector(
                                onTap: () {
                                    setState(() {
                                        passwordVisible = !passwordVisible;
                                    });
                                },
                                child: Icon(
                                    passwordVisible ? Icons.visibility : Icons.visibility_off,
                                    color: Colors.grey.withOpacity(0.9),
                                ),
                            ),
                        ),
                    ),
                    SizedBox(height: 15,),

                    TextField(
                        controller: widget.adrissController,
                        textAlign: TextAlign.right,
                        decoration: InputDecoration(
                            hintText: 'عنوان المنزل',
                            hintStyle: TextStyle(color: Colors.grey),
                            filled: true,
                            fillColor: Colors.white,
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(30.0),
                                borderSide: BorderSide.none,
                            ),
                            contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                            suffixIcon: Icon(Icons.home_outlined, color: Colors.grey.withOpacity(0.9)),
                        ),
                    ),
                    SizedBox(height: 15,),

                    Container(
                        padding: EdgeInsets.symmetric(horizontal: 10),
                        decoration: BoxDecoration(
                            border: Border.all(color: Colors.white,width: 1),
                            borderRadius: BorderRadius.circular(30),

                        ),
                      child: DropdownButton<String>(
                          alignment: AlignmentDirectional.center,
                          value: selectedSemester,
                          hint: Text('اختر الفصل الدراسي'),
                          onChanged: (String? newValue) {
                              setState(() {
                                  selectedSemester = newValue!;

                              });

                          },
                          items: <String>[
                              'الأول',
                              'الثاني',
                              'الثالث',
                          ].map<DropdownMenuItem<String>>((String value) {
                              return DropdownMenuItem<String>(
                                  value: value,
                                  child: Text(value ,style: TextStyle(color: Colors.white),),
                              );
                          }).toList(),
                          style: TextStyle(color: Colors.black ,fontFamily: 'boutros',
                              fontSize: 20,),
                          dropdownColor: Colors.deepPurple,
                          elevation: 2,
                          icon: Icon(Icons.arrow_drop_down),
                          iconEnabledColor: Colors.white,
                         // isExpanded: true,
                          underline: Container(
                              height: 0,
                              color: Colors.black,
                          ),
                          borderRadius: BorderRadius.circular(10),

                      ),
                    ),
                ],
            ),
        );
    }
}


class Step2 extends StatelessWidget {
    final TextEditingController emailController;

    const Step2({Key? key, required this.emailController}) : super(key: key);

    @override
    Widget build(BuildContext context) {
        return TextField(
            controller: emailController,
            textAlign: TextAlign.right,
            decoration: InputDecoration(
                hintText: 'اسم ثالث',
                hintStyle: TextStyle(color: Colors.grey),
                filled: true,
                fillColor: Colors.white,
                border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(30.0),
                    borderSide: BorderSide.none,
                ),
                contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
                suffixIcon: Icon(Icons.email, color: Colors.grey.withOpacity(0.9)),
            ),
        );
    }
}

--------------------------------------------image
   // // Row(
            // //   children: [
            // //     Expanded(
            // //       child: ElevatedButton(
            // //         onPressed: () {
            // //           pickFile('profile');
            // //         },
            // //         child: Column(
            // //           crossAxisAlignment: CrossAxisAlignment.end,
            // //           children: [
            // //             Text('تحميل الصورة الشخصية'),
            // //             //Text(),
            // //             if (profileFileName != null)
            // //               Text(
            // //                 '$profileFileName',
            // //                 style: TextStyle(
            // //                   color: Colors.black,
            // //                   fontFamily: 'boutros',
            // //                   fontSize: 16,
            // //                 ),
            // //                 overflow: TextOverflow.ellipsis,
            // //                 maxLines: 1,
            // //               ),
            // //           ],
            // //         ),
            // //       ),
            // //     ),
            // //   ],
            // // ),
            // // SizedBox(
            // //   height: 15,
            // // ),
            // SizedBox(
            //   height: 25,
            // ),
            // Directionality(
            //   textDirection: TextDirection.rtl,
            //   child: TextFormField(
            //     onTap: () {
            //       if (isTextFieldEnabled) {
            //         pickFile('profile');
            //       }
            //     },
            //     initialValue: profileFileName,
            //     readOnly: true,
            //     textAlign: TextAlign.center,
            //     maxLines: 1,
            //     decoration: InputDecoration(
            //       alignLabelWithHint: true,
            //       filled: true,
            //       fillColor: Colors.deepPurpleAccent,
            //       enabledBorder: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       focusedBorder: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       border: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       labelText: profileFileName == null
            //           ? 'تحميل الصورة الشخصية'
            //           : profileFileName,
            //       labelStyle: TextStyle(color: Colors.white),
            //     ),
            //   ),
            // ),
            // // Directionality(
            // //   textDirection: TextDirection.rtl,
            // //   child: GestureDetector(
            // //     onTap: () {
            // //       if (isTextFieldEnabled) {
            // //         pickFile('profile');
            // //       }
            // //     },
            // //     child: InputDecorator(
            // //       decoration: InputDecoration(
            // //         alignLabelWithHint: true,
            // //         labelText: 'تحميل الصورة الشخصية',
            // //         focusedBorder: InputBorder.none,
            // //         labelStyle: TextStyle(
            // //             color: Colors.white, fontWeight: FontWeight.w900),
            // //         filled: true,
            // //         fillColor: Colors.deepPurpleAccent,
            // //         border: OutlineInputBorder(
            // //           borderRadius: BorderRadius.circular(30.0),
            // //           borderSide: BorderSide.none,
            // //         ),
            // //         contentPadding:
            // //             EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
            // //       ),
            // //       child: Text(
            // //         profileFileName ??
            // //             '', // Display the value of certificateFileName
            // //         style: TextStyle(
            // //           color: Colors.black,
            // //           fontSize: 16.0,
            // //         ),
            // //       ),
            // //     ),
            // //   ),
            // // ),
            // // Row(
            // //   children: [
            // //     Expanded(
            // //       child: ElevatedButton(
            // //         onPressed: () => pickFile('id'),
            // //         child: Column(
            // //           crossAxisAlignment: CrossAxisAlignment.end,
            // //           children: [
            // //             Text('تحميل صورة الهوية الشخصية'),
            // //             if (idFileName != null)
            // //               Text(
            // //                 '$idFileName',
            // //                 style: TextStyle(
            // //                   color: Colors.black,
            // //                   fontFamily: 'boutros',
            // //                   fontSize: 16,
            // //                 ),
            // //                 overflow: TextOverflow.ellipsis,
            // //                 maxLines: 1,
            // //               ),
            // //           ],
            // //         ),
            // //       ),
            // //     ),
            // //   ],
            // // ),
            // SizedBox(
            //   height: 25,
            // ),
            //
            // Directionality(
            //   textDirection: TextDirection.rtl,
            //   child: TextFormField(
            //     onTap: () {
            //       if (isTextFieldEnabled) {
            //         pickFile('id');
            //       }
            //     },
            //     initialValue: idFileName,
            //     readOnly: true,
            //     textAlign: TextAlign.center,
            //     maxLines: 1,
            //     decoration: InputDecoration(
            //       alignLabelWithHint: true,
            //       filled: true,
            //       fillColor: Colors.deepPurpleAccent,
            //       enabledBorder: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       focusedBorder: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       border: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       labelText: idFileName == null
            //           ? 'تحميل صورة الهوية الشخصية'
            //           : idFileName,
            //       labelStyle: TextStyle(color: Colors.white),
            //     ),
            //   ),
            // ),
            // // Row(
            // //   children: [
            // //     Expanded(
            // //       child: ElevatedButton(
            // //         onPressed: () => pickFile('certificate'),
            // //         child: Column(
            // //           crossAxisAlignment: CrossAxisAlignment.end,
            // //           children: [
            // //             Text(' تحميل صورة الشهادة التي تسبق المرحلة الدراسية'),
            // //             if (certificateFileName != null)
            // //               Text(
            // //                 '$certificateFileName',
            // //                 style: TextStyle(
            // //                   color: Colors.black,
            // //                   fontFamily: 'boutros',
            // //                   fontSize: 16,
            // //                 ),
            // //                 overflow: TextOverflow.ellipsis,
            // //                 maxLines: 1,
            // //               ),
            // //           ],
            // //         ),
            // //       ),
            // //     ),
            // //   ],
            // // ),
            // SizedBox(
            //   height: 25,
            // ),
            //
            // Directionality(
            //   textDirection: TextDirection.rtl,
            //   child: TextFormField(
            //     onTap: () {
            //       if (isTextFieldEnabled) {
            //         pickFile('certificate');
            //       }
            //     },
            //     initialValue: certificateFileName,
            //     readOnly: true,
            //     textAlign: TextAlign.center,
            //     maxLines: 1,
            //     decoration: InputDecoration(
            //       alignLabelWithHint: true,
            //       filled: true,
            //       fillColor: Colors.deepPurpleAccent,
            //       enabledBorder: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       focusedBorder: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       border: OutlineInputBorder(
            //         borderRadius: BorderRadius.circular(30.0),
            //         borderSide: BorderSide.none,
            //       ),
            //       labelText: certificateFileName == null
            //           ? 'تحميل صورة الشهادة التي تسبق المرحلة المختارة'
            //           : certificateFileName,
            //       labelStyle: TextStyle(color: Colors.white),
            //     ),
            //   ),
            // ),

            //
            // Directionality(
            //   textDirection: TextDirection.rtl,
            //   child: GestureDetector(
            //     onTap: () {
            //       if (isTextFieldEnabled) {
            //         pickFile('certificate');
            //       }
            //     },
            //     child: InputDecorator(
            //       decoration: InputDecoration(
            //         labelText: 'تحميل صورة الشهادة التي تسبق المرحلة الدراسية',
            //         labelStyle: TextStyle(
            //             color: Colors.white, fontWeight: FontWeight.w900),
            //         filled: true,
            //         fillColor: Colors.deepPurpleAccent,
            //         border: OutlineInputBorder(
            //           borderRadius: BorderRadius.circular(30.0),
            //           borderSide: BorderSide.none,
            //         ),
            //         contentPadding:
            //             EdgeInsets.symmetric(vertical: 15.0, horizontal: 20.0),
            //       ),
            //       child: Text(
            //         certificateFileName ??
            //             '', // Display the value of certificateFileName
            //         textAlign: TextAlign.center,
            //         style: TextStyle(
            //           color: Colors.white,
            //           fontSize: 16.0,
            //         ),
            //       ),
            //     ),
            //   ),
            // ),

